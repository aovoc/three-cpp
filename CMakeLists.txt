
PROJECT(THREE_CPP)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6.4)

INCLUDE(FindOpenGL)

SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)

# Always build with debug symbols for now.
#LIST(APPEND CMAKE_C_FLAGS -g)

IF(BUILD_DEBUG)
  ADD_DEFINITIONS("-DDEBUG")
ENDIF()

IF(UNIX)
  IF(APPLE)
		FIND_LIBRARY(COCOA_LIBRARY Cocoa)
    SET(CMAKE_OSX_ARCHITECTURES x86_64)
    ADD_DEFINITIONS("-DPLATFORM_MAC")

		SET(EXTRA_LIBRARIES ${COCOA_LIBRARY})
  ELSE()
    SET(EXTRA_LIBRARIES "GL" "GLU" "X11" "Xrandr" "pthread" "rt")
    ADD_DEFINITIONS("-DPLATFORM_LINUX")
  ENDIF()
ENDIF(UNIX)

INCLUDE_DIRECTORIES(
  "${CMAKE_CURRENT_SOURCE_DIR}/src"
  "${CMAKE_CURRENT_SOURCE_DIR}/include"
  "${CMAKE_CURRENT_SOURCE_DIR}/build/include"
  "${CMAKE_CURRENT_SOURCE_DIR}/third-party/tinyxml"
  "${CMAKE_CURRENT_SOURCE_DIR}/third-party/open-ctm"
	"${OPENGL_INCLUDE_DIR}"
)

LINK_DIRECTORIES(
  "${CMAKE_CURRENT_SOURCE_DIR}/build/lib"
)

ADD_SUBDIRECTORY(third-party/parson)
ADD_SUBDIRECTORY(third-party/tinyxml)
ADD_SUBDIRECTORY(third-party/open-ctm)
ADD_SUBDIRECTORY(third-party/convert-ctm)

ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(examples)

